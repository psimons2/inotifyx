From a0cf60121148f3ceb19ac68803418137955a012c Mon Sep 17 00:00:00 2001
From: Brian Russell <brussell@brocade.com>
Date: Mon, 27 Feb 2017 12:21:15 +0000
Subject: [PATCH 2/4] update C binding for python3

Update the module init for python3. This is required for version
3.5 onwards.
---
 inotifyx/binding.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/inotifyx/binding.c b/inotifyx/binding.c
index 95082ce..ef0094a 100644
--- a/inotifyx/binding.c
+++ b/inotifyx/binding.c
@@ -44,6 +44,9 @@
 #define EVENT_SIZE (sizeof (struct inotify_event))
 #define BUF_LEN (1024 * (EVENT_SIZE + 16))
 
+#if PY_MAJOR_VERSION >= 3
+#define IS_PY3
+#endif
 
 static PyObject * inotifyx_init(PyObject *self, PyObject *args) {
     int fd;
@@ -262,7 +265,25 @@ static PyMethodDef InotifyMethods[] = {
   {NULL, NULL, 0, NULL}
 };
 
+#ifdef IS_PY3
+static struct PyModuleDef inotifybinding =
+{
+  PyModuleDef_HEAD_INIT,
+  "inotifyx.binding",
+  (
+    "Low-level interface to inotify.  Do not use this module directly.\n"
+    "Instead, use the inotifyx module."
+  ),
+  -1,
+  InotifyMethods
+};
+
+PyMODINIT_FUNC PyInit_binding(void) {
+    PyObject *module = PyModule_Create(&inotifybinding);
 
+     if (module == NULL)
+        return NULL;
+#else
 PyMODINIT_FUNC initbinding(void) {
     PyObject* module = Py_InitModule3(
       "inotifyx.binding",
@@ -275,6 +296,7 @@ PyMODINIT_FUNC initbinding(void) {
 
     if (module == NULL)
         return;
+#endif
     
     PyModule_AddIntConstant(module, "IN_ACCESS", IN_ACCESS);
     PyModule_AddIntConstant(module, "IN_MODIFY", IN_MODIFY);
@@ -299,4 +321,7 @@ PyMODINIT_FUNC initbinding(void) {
     PyModule_AddIntConstant(module, "IN_ISDIR", IN_ISDIR);
     PyModule_AddIntConstant(module, "IN_ONESHOT", IN_ONESHOT);
     PyModule_AddIntConstant(module, "IN_ALL_EVENTS", IN_ALL_EVENTS);
+#ifdef IS_PY3
+    return module;
+#endif
 }
-- 
2.1.4

